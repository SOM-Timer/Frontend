@import '../../style/variables.scss';
@import '../../style/mixins.scss';

/* Structural Styling */
.prompt {
  font-size: 1.5em;
  margin: 2.4em 0 0 0;
}

.countdownTimer {
  display: flex;
  flex-direction: column;
  margin: auto;
  width: 300px;
}

.timerControls {
  width: 300px;
  display: flex;
  justify-content: space-around;
}

.timerControlButton {
  @include size(55px,55px);
  border-radius: 50%;
  border: none;
  align-items: center;
  // background-color: $midBlue;
  background: radial-gradient($midBlue, $darkBlue);
  color: $white;
  font-family: $primaryFont;
  font-weight: 700;
  box-shadow: 0px 0px 10px 0.5px $darkBlue, inset 0px 0px 1px rgba(0, 0, 0, 0.239);

  &:hover {
    background-color: $darkBlue;
    cursor: pointer;
  }
}

.playTimerControlIcon {
  height: 32px;
  margin-top: 2px;
  margin-left: 4px;
}

.pauseTimerControlIcon {
  height: 30px;
  margin-top: 2px;
  margin-left: 1.5px;
}

.resetTimerControlIcon {
  height: 35px;
  width: 30px;
  margin-top: 3px;
  margin-left: 1px;
}

.skipTimerControlIcon {
  height: 25px;
  width: 90%;
  margin-top: 3px;
  margin-left: 1px;
}

/* Countdown Animation Styling */
/* Sets height and width of timer container*/
.baseTimer {
  @include size(300px, 300px);
  position: relative;
  margin: 2em auto;
}

/* Removes svg styling that hides clock display */
.baseTimerCircle {
  fill: none;
  stroke: none;
}

/* SVG path that displays timer's progress */
.baseTimerPathElapsed {
  stroke-width: 7px;
  stroke: $white;
}

/* Show timer value inside ring */
/* Size needs to match base-timer container */
.baseTimerLabel {
  @include size(300px, 300px);
  position: absolute;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: $primaryFont;
  font-size: 3em;
  font-weight: 600;
  margin: 0;
}

/* Path Remaining Styling */
.baseTimerPathRemaining {
  stroke-width: 7px;
  stroke-linecap: round;
  transform: rotate(90deg);
  transform-origin: center;
  transition: .1s linear all;
  stroke: $salmon;
}

.baseTimerPathAnimated {
  @extend .baseTimerPathRemaining;
  animation: countDown 3600s infinite; 
}

@keyframes countDown {
  0% {
    stroke: $salmon; 
  }
  100% {
    stroke: $salmonDark;
  }
}

.baseTimerSvg {
  /* Makes our animation move counter-clockwise by flipping svg */
  transform: scaleX(-1);
  filter: drop-shadow(0px 0px 4px  $salmonHover);
}

@media screen and (max-height: 680px) {
  .prompt {
    font-size: 1.15em;
  }

  .baseTimer {
    margin: 1.4em auto;
  }

  .timerControlButton {
    @include size(60px, 60px);
  }
}